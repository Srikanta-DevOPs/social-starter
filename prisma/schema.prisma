generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  handle       String   @unique
  name         String
  email        String   @unique
  passwordHash String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  posts    Post[]
  comments Comment[]
  likes    Like[]
  resets   PasswordReset[]
}

model Post {
  id        String   @id @default(cuid())
  authorId  String
  content   String
  imageUrl  String?
  createdAt DateTime @default(now())

  author   User      @relation(fields: [authorId], references: [id])
  comments Comment[]
  likes    Like[]

  @@index([authorId, createdAt])
}

model Comment {
  id        String   @id @default(cuid())
  postId    String
  authorId  String
  content   String
  createdAt DateTime @default(now())

  post   Post @relation(fields: [postId], references: [id])
  author User @relation(fields: [authorId], references: [id])

  @@index([postId, createdAt])
}

model Like {
  id     String @id @default(cuid())
  postId String
  userId String

  post Post @relation(fields: [postId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@unique([postId, userId])
}

model PasswordReset {
  id        String   @id @default(cuid())
  userId    String
  code      String
  expiresAt DateTime
  used      Boolean  @default(false)
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id])

  @@index([userId, createdAt])
}

model OtpRequest {
  id        String   @id @default(cuid())
  email     String
  ip        String
  createdAt DateTime @default(now())

  @@index([email, createdAt])
  @@index([ip, createdAt])
}
